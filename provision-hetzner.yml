# Create Staging/Production Managers and Workers
# Check if the provisioning succeeded
# Wait 100s for hosts to come up if they've been recently created/changed
- name: Create Swarm Infrastructure
  hosts: localhost
  connection: local
  gather_facts: False
  user: root
  tasks:
    - name: Create Managers
      hcloud_server:
        api_token: "{{ hcloud_token }}"
        name: "{{ item }}"
        server_type: cx11
        image: ubuntu-18.04
        location: nbg1
        ssh_keys:
          - MBio DevOps
        state: present
        labels:
          swarm: ""
          manager: ""
          mbiosphere: ""
        backups: no
      with_items: "{{ nodes.manager }}"
    - name: Create Workers
      hcloud_server:
        api_token: "{{ hcloud_token }}"
        name: "{{ item }}"
        server_type: cx11
        image: ubuntu-18.04
        location: nbg1
        ssh_keys:
          - MBio DevOps
        state: present
        labels:
          swarm: ""
          worker: ""
          mbiosphere: ""
        backups: no
      with_items: "{{ nodes.worker }}"
    - name: Create Runners
      hcloud_server:
        api_token: "{{ hcloud_token }}"
        name: "{{ item }}"
        server_type: cx11
        image: ubuntu-18.04
        location: nbg1
        ssh_keys:
          - MBio DevOps
        state: present
        labels:
          runner: ""
          mbiosphere: ""
        backups: no
      with_items: "{{ nodes.runner }}"
    
    # - name: Create staging-manager-1
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: staging-manager-1
    #     server_type: cx11
    #     image: ubuntu-18.04
    #     location: nbg1
    #     ssh_keys:
    #       - MBio DevOps
    #     state: present
    #     labels:
    #       type: swarm
    #       environment: staging
    #       role: manager
    #     backups: no
    #   register: server1
    # - name: Create staging-manager-2
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: staging-manager-2
    #     server_type: cx11
    #     image: ubuntu-18.04
    #     location: nbg1
    #     ssh_keys:
    #       - MBio DevOps
    #     state: present
    #     labels:
    #       type: swarm
    #       environment: staging
    #       role: manager
    #     backups: no
    #   register: server2
    # - name: Create staging-manager-3
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: staging-manager-3
    #     server_type: cx11
    #     image: ubuntu-18.04
    #     location: nbg1
    #     ssh_keys:
    #       - MBio DevOps
    #     state: present
    #     labels:
    #       type: swarm
    #       environment: staging
    #       role: manager
    #     backups: no
    #   register: server3
    # - name: Create staging-worker-1
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: staging-worker-1
    #     server_type: cx11
    #     image: ubuntu-18.04
    #     location: nbg1
    #     ssh_keys:
    #       - MBio DevOps
    #     state: present
    #     labels:
    #       type: swarm
    #       environment: staging
    #       role: worker
    #     backups: no
    #   register: server4
    # - name: Create staging-worker-2
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: staging-worker-2
    #     server_type: cx11
    #     image: ubuntu-18.04
    #     location: nbg1
    #     ssh_keys:
    #       - MBio DevOps
    #     state: present
    #     labels:
    #       type: swarm
    #       environment: staging
    #       role: worker
    #     backups: no
    #   register: server5
    # - name: Create staging-worker-3
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: staging-worker-3
    #     server_type: cx11
    #     image: ubuntu-18.04
    #     location: nbg1
    #     ssh_keys:
    #       - MBio DevOps
    #     state: present
    #     labels:
    #       type: swarm
    #       environment: staging
    #       role: worker
    #     backups: no
    #   register: server6
    # - name: Check staging-manager-1
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: "{{ server1.hcloud_server.name }}"
    #     state: started
    #   when: server1.changed
    # - name: Check staging-manager-2
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: "{{ server2.hcloud_server.name }}"
    #     state: started
    #   when: server2.changed
    # - name: Check staging-manager-3
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: "{{ server3.hcloud_server.name }}"
    #     state: started
    #   when: server3.changed
    # - name: Check staging-worker-1
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: "{{ server1.hcloud_server.name }}"
    #     state: started
    #   when: server4.changed
    # - name: Check staging-worker-2
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: "{{ server2.hcloud_server.name }}"
    #     state: started
    #   when: server5.changed
    # - name: Check staging-worker-3
    #   hcloud_server:
    #     api_token: "{{ hcloud_token }}"
    #     name: "{{ server3.hcloud_server.name }}"
    #     state: started
    #   when: server6.changed
    - name: Refresh inventory to ensure new instances exist in inventory
      meta: refresh_inventory
    - name: Wait for Hosts to be up
      pause:
        prompt: "Waiting for servers to become fully available"
        seconds: 180
      #when: server1.changed or server2.changed or server3.changed or server4.changed or server5.changed or server6.changed
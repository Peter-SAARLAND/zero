# TODO: make this usable for RHEL/Centos
- name: Install Longhorn Requirements
  become: yes
  apt: 
    name: 
      - open-iscsi
      - curl
      - util-linux
      - grep
      - mawk
      - libblkid1 
      - multipath-tools
    state: present
    update_cache: yes
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Install Longhorn Requirements
  become: yes
  yum: 
    name: 
      - iscsi-initiator-utils
      - curl
      - multipath-tools
    state: present
    update_cache: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux']

- name: Enable iscsid 
  ansible.builtin.systemd:
    name: iscsid
    state: started
    enabled: yes

- name: installing Longhorn
  block:
    - name: creating namespace
      community.kubernetes.k8s:
        name: "{{ longhorn_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      run_once: true
      delegate_to: localhost

    - name: correct multipath config
      ansible.builtin.template:
        src: multipath.conf.j2
        dest: /etc/multipath.conf
        owner: root
        group: root
        mode: '0644'
      notify: 
        - Restart multipathd
      when: ansible_distribution in ['Debian', 'Ubuntu']

    # - name: Restart multipathd 
    #   ansible.builtin.systemd:
    #     name: multipathd
    #     state: restarted
    #     daemon_reload: yes
    #     enabled: yes
    #   notify: 
    #     - Restart multipathd
    #   when: ansible_distribution in ['Debian', 'Ubuntu']

    - name: adding repository
      community.kubernetes.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io
      run_once: true
      delegate_to: localhost

    - name: determine replica count
      set_fact:
        replicaCount: 1
      when: groups['node'] | length < 2

    - name: determine replica count
      set_fact:
        replicaCount: 2
      when: groups['node'] | length < 3

    - name: determine replica count
      set_fact:
        replicaCount: 3
      when: groups['node'] | length >= 3

    - name: deploying
      community.kubernetes.helm:
        release_name: "longhorn"
        chart_ref: longhorn/longhorn
        release_namespace: "{{ longhorn_namespace }}"
        update_repo_cache: True
        wait: yes
        chart_version: "{{ longhorn_version }}"
        wait_timeout: 10m0s
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
        values:
          persistence:
            defaultClassReplicaCount: "{{ replicaCount }}"
          defaultSettings:
            defaultReplicaCount: "{{ replicaCount }}"
            allowVolumeCreationWithDegradedAvailability: False
            nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
      run_once: true
      delegate_to: localhost
  when: inventory_hostname == hostvars[groups['master'][0]]['inventory_hostname']

# - name: Check for existing default storage class in Kubeadm
#   shell: kubectl get storageclass | grep default | awk '{print $1}'
#   register: default_storage_check_result
#   when: longhorn_default_storage

# - name: Remove role of default existing storage from existing
#   shell: "kubectl patch storageclass {{ default_storage_check_result.stdout }} -p \'{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"false\"}}}\'"
#   when: longhorn_default_storage and default_storage_check_result.stdout != ""

# - name: Make Longhorn default storage class for Kubeadm
#   command: "kubectl patch storageclass longhorn -p \'{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}\'"
#   when: longhorn_default_storage
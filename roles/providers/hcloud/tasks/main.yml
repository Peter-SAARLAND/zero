- name: check conditions
  assert:
    that:
      - hcloud_token != ""
    msg: "HCLOUD_TOKEN must be set"

- name: setting up hcloud-csi
  block:
    - name: Create hcloud-csi secret
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/secret.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-secret

    - name: Install CSIDriver CRD
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/csidriver-crd.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-csidriver-crd

    - name: Install StorageClass
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/storageclass.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-storageclass

    - name: Install ServiceAccount
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/serviceaccount.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-serviceaccount

    - name: Install ClusterRole
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/clusterrole.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-clusterrole

    - name: Install ClusterRoleBinding
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/clusterrolebinding.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-clusterrolebinding

    - name: Install StatefulSet
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/statefulset.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-statefulset

    - name: Install DaemonSet
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/daemonset.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-daemonset

    - name: Install Service for controller metrics
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/service-controller-metrics.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-service-controller-metrics

    - name: Install Service for node metrics
      k8s:
        state: present
        definition: "{{ lookup('template', 'templates/service-node-metrics.yml.j2') | from_yaml }}"
        kubeconfig: "{{ inventory_dir }}/kubeconfig.yml"
      delegate_to: localhost
      tags:
        - install-service-node-metrics
      

# - name: setting up hcloud-csi
#   block:
#     - name: copying hcloud-csi secret
#       template:
#         src: templates/secret.yml.j2
#         dest: "{{ app_dir }}/secret.yml"

#     - name: adding hcloud-csi secret
#       command: "kubectl apply -f {{ app_dir }}/secret.yml"

#     - name: removing default storage class
#       command: "kubectl patch storageclass local-path -p '{\"metadata\": {\"annotations\": {\"storageclass.kubernetes.io/is-default-class\": \"false\"}}}'"

#     - name: setting up hcloud-csi driver
#       command: "kubectl apply -f https://raw.githubusercontent.com/hetznercloud/csi-driver/v{{ version }}/deploy/kubernetes/hcloud-csi.yml"
#   when: ansible_hostname == "manager-0"

  # https://github.com/githubixx/ansible-kubernetes-playbooks/tree/master/hetzner-csi
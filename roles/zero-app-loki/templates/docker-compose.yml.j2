version: '3.7'

services:
  loki:
    image: grafana/loki:1.4.1
    networks: 
      - proxy
      - monitoring
    volumes: 
      - loki-data:/tmp/loki
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 2
        delay: 60s
        monitor: 30s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
        - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
      labels:
        traefik.enable: "true"
        traefik.tags: "proxy"
        traefik.docker.network: "proxy"
        traefik.port: "3100"
        traefik.frontend.rule: "Host:logs.{{ base_domain }}"
        traefik.backend: "zero-app-loki"
        traefik.protocol: "http"
        traefik.backend.loadbalancer.stickiness: "true"
{% if letsencrypt_enabled|bool %}
        traefik.frontend.entryPoints: "http,https"
        traefik.frontend.headers.SSLRedirect: "true"
{% else %}
        traefik.frontend.entryPoints: "http"
{%endif%}

  promtail:
    image: grafana/promtail:latest
    environment:
      - AGENT_CLUSTER_ADDR=tasks.portainer-agent
      - CAP_HOST_MANAGEMENT=1
    networks:
      - monitoring
    volumes:
      - /var/log:/var/log
    deploy:
      mode: global
      update_config:
        parallelism: 2
        delay: 60s
        monitor: 30s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
        - node.platform.os == linux

networks:
  monitoring:
    driver: overlay
    attachable: true
    name: monitoring
  proxy:
    driver: overlay
    external: true

volumes:
  loki-data:
{% if storidge_enabled|bool %}
    driver_config: 
        name: "cio"
        options:
          profile: "SNAPSHOT"
{% endif %}
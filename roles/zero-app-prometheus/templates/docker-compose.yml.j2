version: '3.7'

services:
  prometheus:
    image: "{{ images.prometheus }}"
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-admin-api"
    networks: 
      - proxy
      - monitoring
    volumes: 
      - prometheus-data:/prometheus
      - "{{ app_dir }}:/etc/prometheus"
    healthcheck:
      test: "/bin/wget -q -Y off http://localhost:9090/status -O /dev/null > /dev/null 2>&1"
      interval: 25s
      timeout: 3s
      start_period: 120s
    extra_hosts:
{% for host in groups['all'] %}
      - "{{ hostvars[host].ansible_hostname }}.{{ platform_domain }}:{{ hostvars[host]['ansible_'+private_iface]['ipv4']['address'] }}"
{% endfor %}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: 
        - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
      labels:
        traefik.enable: "true"
        traefik.tags: "proxy"
        traefik.docker.network: "proxy"
        traefik.port: "9090"
        traefik.frontend.rule: "Host:{{ app_domain }}"
        traefik.backend: "zero-app-prometheus"
        traefik.protocol: "http"
        traefik.backend.loadbalancer.stickiness: "true"
        traefik.frontend.auth.basic.users: "{{admin_user}}:{{admin_password_hash}}"
{% if letsencrypt_enabled|bool %}
        traefik.frontend.entryPoints: "http,https"
        traefik.frontend.headers.SSLRedirect: "true"
        traefik.frontend.headers.STSSeconds: "31536000"
        traefik.frontend.headers.STSIncludeSubdomains: "true"
        traefik.frontend.headers.STSPreload: "true"
{% else %}
        traefik.frontend.entryPoints: "http"
{%endif%}

  victoria:
    image: "{{ images.victoria }}"
    command: -storageDataPath=/victoria-data -memory.allowedPercent=20
    networks:
      - monitoring
    deploy:
      labels:
        prometheus.enable: "true"
        prometheus.port: "8428"
        prometheus.path: "/metrics"
      mode: replicated
      placement:
        constraints:
        - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
      replicas: 1
    volumes:
      - victoria-data:/victoria-data

  victoria-agent:
    image: "{{ images.victoria-agent }}"
    command: -promscrape.config=/etc/prometheus/prometheus.yml -remoteWrite.url=https://victoria:8428/api/v1/write
    networks:
      - monitoring
    deploy:
      labels:
        prometheus.enable: "true"
        prometheus.port: "8428"
        prometheus.path: "/metrics"
      mode: replicated
      placement:
        constraints:
        - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
      replicas: 1
    volumes:
      - "{{ app_dir }}:/etc/prometheus"

  blackbox-exporter:
    image: "{{ images.blackbox }}"
    command:
      "--config.file=/etc/blackbox-exporter/blackbox.yml"
    networks:
      - monitoring
    deploy:
      labels:
        prometheus.port: "9115"
        prometheus.path: "/probe"
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
    volumes:
      - blackbox-exporter:/blackbox-exporter
      - "{{ app_dir }}:/etc/blackbox-exporter"

networks:
  monitoring:
    driver: overlay
    external: true
  proxy:
    driver: overlay
    external: true

volumes:
  prometheus-data:
  victoria-data:
  blackbox-exporter:
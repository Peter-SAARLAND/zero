version: '3.7'

services:
  portainer-agent:
    image: portainer/agent:1.5.1
    environment:
      - AGENT_CLUSTER_ADDR=tasks.portainer-agent
      - CAP_HOST_MANAGEMENT=1
    networks: 
      - portainer
    volumes: 
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      update_config:
        parallelism: 2
        delay: 60s
        monitor: 30s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
        - node.platform.os == linux

  portainer:
    image: portainer/portainer:1.23.2
    command: "portainer -H tcp://tasks.portainer-agent:9001 --tlsskipverify --no-analytics --admin-password {{ admin_password_hash.stdout | replace('$', '$$')}}"
    environment:
      - AGENT_CLUSTER_ADDR=tasks.portainer-agent
      - CAP_HOST_MANAGEMENT=1
    networks:
      - proxy
      - portainer
    deploy:
      update_config:
        parallelism: 2
        delay: 60s
        monitor: 30s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
        - node.role == manager
    labels:
      traefik.enable: "true"
      traefik.tags: "proxy"
      traefik.docker.network: "proxy"
      traefik.port: "9000"
      traefik.frontend.rule: "Host:portainer.{{ base_domain }}"
      traefik.backend: "portainer-swarm"
      traefik.protocol: "http"
      traefik.frontend.headers.SSLRedirect: "false"
      traefik.frontend.entryPoints: "http,https"
      traefik.backend.loadbalancer.stickiness: "true"
    depends_on:
      - portainer_agent

networks:
  portainer:
    driver: overlay
    attachable: true
    name: portainer

---
# tasks file for zero-app-traefik
- name: Provision Traefik
  block:
    - name: Create app group
      group:
        name: "{{ app_name }}"
        state: present

    - name: Create app user
      user:
        name: "{{ app_name }}"
        comment: "apollo-app-{{ app_name }}"
        group: "{{ app_name }}"

    - name: Creating app directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
        owner: "{{ app_name }}"
        group: "{{ app_name }}"

    # - name: Copy Stack-File
    #   template:
    #     src: templates/docker-compose.{{ traefik_version }}.yml.j2
    #     dest: "{{ app_dir }}/docker-compose.yml"
    #     mode: '0644'
    #     owner: "{{ app_name }}"
    #     group: "{{ app_name }}"
    #   register: stack_file

    - name: Create config directories
      file:
        path: "{{ app_dir }}/{{ config_dir.path }}"
        state: directory
        mode: '{{ config_dir.mode }}'
        owner: "{{ app_name }}"
        group: "{{ app_name }}"
      with_filetree:
        - "files/"
      when: config_dir.state == 'directory'
      loop_control:
        label: "{{ config_dir.path }}"
        loop_var: config_dir

    - name: Copy config files
      copy:
        src: "{{ config_file.src }}"
        dest: "{{ app_dir }}/{{ config_file.path }}"
        mode: "{{ config_file.mode }}"
        owner: "{{ app_name }}"
        group: "{{ app_name }}"
      with_filetree:
        - "files/"
      when: config_file.state == 'file'
      loop_control:
        label: "{{ config_file.path }}"
        loop_var: config_file

    - name: "Download {{ app_name }} binary"
      become: false
      get_url:
        url: "https://github.com/containous/traefik/releases/download/v{{ traefik_binary_version }}/traefik_v{{ traefik_binary_version }}_linux_amd64.tar.gz"
        dest: "/tmp/traefik-v{{ traefik_binary_version }}.tar.gz"
      register: _download_binary
      until: _download_binary is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: "Unpack {{ app_name }} binary"
      become: false
      unarchive:
        remote_src: True
        src: "/tmp/traefik-v{{ traefik_binary_version }}.tar.gz"
        dest: "/tmp"
        creates: "/tmp/traefik"
      check_mode: false

    - name: "Propagate {{ app_name }} binary"
      copy:
        src: "/tmp/traefik"
        dest: "{{ _traefik_binary_install_dir }}/traefik"
        mode: 0755
        owner: root
        group: root
        remote_src: True
      notify: restart traefik
      when: not ansible_check_mode

    - name: "Copy {{ app_name }} systemd service file"
      template:
        src: templates/traefik.service.j2
        dest: /etc/systemd/system/traefik.service
        owner: root
        group: root
        mode: 0644
      notify: restart traefik

    - name: Copy apollo Traefik config
      template:
        src: templates/apollo-traefik.toml.j2
        dest: "{{ app_dir }}/apollo-traefik.toml"
        owner: "{{ app_name }}"
        group: "{{ app_name }}"
        mode: '0644'
      notify: restart traefik

    - name: Copy apollo Traefik dynamic config
      template:
        src: templates/apollo-traefik-dynamic.toml.j2
        dest: "{{ app_dir }}/apollo-traefik-dynamic.toml"
        owner: "{{ app_name }}"
        group: "{{ app_name }}"
        mode: '0644'
      notify: restart traefik

    # - name: Copy Docker Traefik config
    #   template:
    #     src: templates/traefik.{{ traefik_version }}.toml.j2
    #     dest: "{{ app_dir }}/traefik.toml"
    #     owner: "{{ app_name }}"
    #     group: "{{ app_name }}"
    #     mode: '0644'
    - name: Make sure service is started
      service:
        name: traefik
        state: started
        enabled: true

    - name: Remove Docker Traefik config
      file:
        path: "{{ app_dir }}/traefik.toml"
        state: absent

    # - name: Pull images
    #   docker_image:
    #     name: "{{ item.value }}"
    #     source: pull
    #   with_dict: "{{ images }}"
    
    # - name: Provision Traefik
    #   docker_stack:
    #     state: present
    #     name: traefik
    #     prune: yes
    #     with_registry_auth: yes
    #     compose:
    #       - "{{ app_dir }}/docker-compose.yml"
    #   register: traefik_provision

    # - name: "Wait for http://proxy.{{ space_domain }} to become ready"
    #   uri:
    #     url: "http://proxy.{{ space_domain }}"
    #     method: GET
    #     status_code: 200
    #     user: "{{admin_user}}"
    #     password: "{{admin_password}}"
    #     validate_certs: no
    #   register: _result
    #   until: _result.status == 200
    #   retries: 30 # retry X times  
    #   delay: 10 # pause for X sec b/w each call 
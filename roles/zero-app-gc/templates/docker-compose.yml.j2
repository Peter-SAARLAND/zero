version: '3.7'

services:
  garbage-collector:
    image: clockworksoul/docker-gc-cron:latest
    environment:
      - CRON=*/15 * * * *
      # By default, docker will not remove an image if it is tagged in multiple repositories. If
      # you have a server running docker where this is the case, for example in CI environments
      # where dockers are being built, re-tagged, and pushed, you can set this flag to 1 to override.
      - FORCE_IMAGE_REMOVAL=1
      # By default, if an error is encountered when cleaning up a container, Docker will report the
      # error back and leave it on disk. This can sometimes lead to containers accumulating. If
      # you run into this issue, you can force the removal of the container by setting this flag.
      - FORCE_CONTAINER_REMOVAL=1
      # By default, docker-gc will not remove a container if it exited less than 1 hour ago.
      # Set the GRACE_PERIOD_SECONDS variable to override this default.
      - GRACE_PERIOD_SECONDS=3600
      # By default, docker-gc will proceed with deletion of containers and images. To test your
      # settings set the DRY_RUN variable to override this default
      - DRY_RUN=0
      # By default, this process will leave any dangling volumes untouched. To instruct the
      # process to automatically clean up any dangling volumes, simply set this value to 1.
      - CLEAN_UP_VOLUMES={{ apollo_gc_cleanup_volumes }}
      # If you don't like all your log output and cron times being in UTC, you can set the
      # TZ variable to override the default.
      #- TZ=America/Chicago
      - MINIMUM_IMAGES_TO_SAVE=2
    networks: 
      - monitoring
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
        - node.platform.os == linux

networks:
  monitoring:
    driver: overlay
    external: true
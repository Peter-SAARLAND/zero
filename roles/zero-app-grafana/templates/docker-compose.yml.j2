version: '3.7'

services:
  grafana:
    image: {{ images.grafana }}
    environment:
      GF_SECURITY_ADMIN_USER: "{{ admin_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ admin_password }}"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_DEFAULT_THEME: "light"
      GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel"
      GF_DEFAULT_INSTANCE_NAME: "{{ apollo_space }}"
      GF_SERVER_DOMAIN: "{{ app_domain }}"
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
{% if letsencrypt_enabled|bool %}
      GF_SERVER_ROOT_URL: "https://{{ app_domain }}"
{% else %}
      GF_SERVER_ROOT_URL: "http://{{ app_domain }}"
{% endif %}
      GF_SERVER_ENABLE_GZIP: "true"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
    networks: 
      - proxy
      - monitoring
    volumes: 
      - grafana-data:/var/lib/grafana
      - "{{ app_dir }}:/etc/grafana/provisioning/"
    healthcheck:
      test: "wget -q -Y off -O /dev/null http://localhost:3000/login > /dev/null 2>&1"
      interval: 25s
      timeout: 3s
      start_period: 120s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: 
        - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
      labels:
        traefik.enable: "true"
        traefik.tags: "proxy"
        traefik.docker.network: "proxy"
        traefik.port: "3000"
        traefik.frontend.rule: "Host:{{ app_domain }}"
        traefik.backend: "zero-app-grafana"
        traefik.protocol: "http"
        traefik.backend.loadbalancer.stickiness: "true"
{% if letsencrypt_enabled|bool %}
        traefik.frontend.entryPoints: "http,https"
        traefik.frontend.headers.SSLRedirect: "true"
        traefik.frontend.headers.STSSeconds: "31536000"
        traefik.frontend.headers.STSIncludeSubdomains: "true"
        traefik.frontend.headers.STSPreload: "true"
{% else %}
        traefik.frontend.entryPoints: "http"
{%endif%}

  trickster:
    image: {{ images.trickster }}
    networks:
      - monitoring
    deploy:
      mode: replicated
      replicas: 1

networks:
  monitoring:
    driver: overlay
    external: true
  proxy:
    driver: overlay
    external: true

volumes:
  grafana-data:
# {% if apollo_data == "storidge" %}
#     driver: cio
#     driver_opts: 
#       profile: "SNAPSHOT"
# {% endif %}
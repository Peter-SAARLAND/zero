---
# tasks file for zero-network
# cluster_network: defines the private network that will be used for internal communication
# private_interfaces: all interfaces with private networks
# public_interfaces: all interfaces with public networks
# cluster_interface: the interface used for cluster communication (auto-discovery)
# - name: Defining Cluster Interface
#   set_fact: 
#     private_interfaces: "{{ [private_iface] }}"
#     public_interfaces: "{{ [public_iface] }}"

# - name: Gathering Network Interfaces
#   set_fact:
#     ansible_eth: "{% set ansible_eth = ansible_eth|default([]) + [hostvars[inventory_hostname]['ansible_' + item]] %}{{ ansible_eth|list }}"
#   when: hostvars[inventory_hostname]['ansible_' + item]['type'] == 'ether' and not hostvars[inventory_hostname]['ansible_' + item]['device'].startswith("v")
#   with_items:
#     - "{{ansible_interfaces |Â sort}}"

# - name: Listing Network Interfaces
#   debug: 
#     msg: "{{ item['ipv4']['address'] | ipaddr('private')  }}"
#   with_items:
#     - "{{ansible_eth}}"
#   when: item['ipv4']['address'] is defined

# - name: Defining Private Interfaces
#   set_fact: 
#     private_interfaces: "{% set private_interfaces = private_interfaces|default([private_iface]) + [item['device']] %}{{ private_interfaces|list }}"
#   with_items:
#     - "{{ansible_eth}}"
#   when: item['ipv4']['address'] is defined and item['ipv4']['address'] | ipaddr('private')

# - name: Defining Public Interfaces
#   set_fact: 
#     public_interfaces: "{% set public_interfaces = public_interfaces|default([public_iface]) + [item['device']] %}{{ public_interfaces|list }}"
#   with_items:
#     - "{{ansible_eth}}"
#   when: item['ipv4']['address'] is defined and item['ipv4']['address'] | ipaddr('public')

# - name: Defining Cluster Interface
#   set_fact: 
#     cluster_interface: "{{ private_interfaces|sort|first|default(private_iface) }}"
#     private_iface: "{{ private_interfaces|sort|first|default(private_iface) }}"
#     public_iface: "{{ public_interfaces|sort|first|default(public_iface) }}"

# - name: Defining Ingress IP
#   set_fact:
#     ingress_ip: "{{ hostvars[groups['all'][0]]['ansible_'+public_iface]['ipv4']['address'] }}"

- name: Debug Interfaces
  debug: 
    msg: "{{ 'Private Interface: '+private_iface+' - Public Interface: '+public_iface+' - Ingress IP: '+ingress_ip }}"

- name: Copying firewall config
  template:
    src: templates/iptables.conf.j2
    dest: /etc/iptables.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart firewall
  tags:
    - firewall

- name: Copying firewall service
  template:
    src: templates/iptables.service.j2
    dest: /etc/systemd/system/iptables.service
    owner: root
    group: root
    mode: '0644'
  notify: reload systemd
  tags:
    - firewall

- name: Enabling firewall service
  service:
    name: iptables
    enabled: True
  tags:
    - firewall
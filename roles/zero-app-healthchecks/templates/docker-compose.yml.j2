version: '3.7'

services:
  healthchecks:
    image: linuxserver/healthchecks
    environment:
      - PUID=1000
      - PGID=1000
      - SITE_ROOT=healthchecks.{{ platform_domain }}
      - BASE_URL=healthchecks.{{ platform_domain }}
      - SITE_NAME=healthchecks.{{ platform_domain }}
      - DEFAULT_FROM_EMAIL={{ letsencrypt_mail }}
      - EMAIL_HOST={{ apollo_smtp_server }}
      - EMAIL_PORT={{ apollo_smtp_port }}
      - EMAIL_HOST_USER={{ apollo_smtp_username }}
      - EMAIL_HOST_PASSWORD={{ apollo_smtp_password }}
      - EMAIL_USE_TLS=False
      - ALLOWED_HOSTS="*"
      - SUPERUSER_EMAIL={{ admin_user }}@{{ platform_domain }}
      - SUPERUSER_PASSWORD={{ admin_password }}
      - REGISTRATION_OPEN=False
      - Debug=True
      - DB=sqlite
    networks:
      - proxy
      - monitoring
    volumes: 
      - healthchecks-data:/config
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
          condition: on-failure
      placement:
          constraints: 
          - "node.hostname == {{ hostvars[groups['manager'][0]]['ansible_hostname'] }}"
      labels:
          traefik.enable: "true"
          traefik.tags: "proxy"
          traefik.docker.network: "proxy"
          traefik.port: "8000"
          traefik.frontend.rule: "Host:healthchecks.{{ platform_domain }}"
          traefik.backend: "zero-app-healthchecks"
          traefik.protocol: "http"
{% if letsencrypt_enabled|bool %}
          traefik.frontend.entryPoints: "http,https"
          traefik.frontend.headers.SSLRedirect: "true"
{% else %}
          traefik.frontend.entryPoints: "http"
{%endif%}
          traefik.backend.loadbalancer.stickiness: "true"
          traefik.frontend.auth.basic.users: "{{admin_user}}:{{admin_password_hash}}"

networks:
  proxy:
    driver: overlay
    external: true
    name: proxy
  monitoring:
    driver: overlay
    external: true
    name: monitoring

volumes:
  healthchecks-data:
---
- name: enable minio
  block:
    - name: Creating app directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
        owner: "apollo"
        group: "apollo"

    - name: Creating storage directory
      file:
        path: "{{ arc['data']['volumes_dir'] }}/{{ app_name }}"
        state: directory
        mode: '0755'
        owner: "apollo"
        group: "apollo"

    - name: Copy Stack-File
      template:
        src: templates/docker-compose.yml.j2
        dest: "{{ app_dir }}/docker-compose.yml"
        owner: apollo
        group: apollo
        mode: '0644'

    - name: Pull images
      docker_image:
        name: "{{ item.value }}"
        source: pull
      with_dict: "{{ images }}"

    - name: Check for legacy Docker volume
      stat:
        path: "/var/lib/docker/volumes/minio_minio-data/_data"
      register: volume_stat_result

    - name: Check if volume is already migrated
      stat:
        path: "{{ arc['data']['volumes_dir'] }}/{{ app_name }}/_data"
      register: stat_result

    - name: Migrate volume
      copy:
        src: /var/lib/docker/volumes/minio_minio-data/_data
        dest: "{{ arc['data']['volumes_dir'] }}/{{ app_name }}"
        remote_src: yes
      when: 
        - stat_result is defined
        - not stat_result.stat.exists
        - volume_stat_result.stat.exists

    - name: enable minio
      docker_stack:
        state: present
        name: minio
        prune: yes
        with_registry_auth: yes
        compose:
          - "{{ app_dir }}/docker-compose.yml"
  when:
    - arc['addons']['minio']['enabled']|bool

- name: disable minio
  block:
    - name: disable minio
      docker_stack:
        state: absent
        name: minio
  when:
    - not arc['addons']['minio']['enabled']|bool
  tags:
    - proxy
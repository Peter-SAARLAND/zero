debug = false
logLevel = "INFO"
checkNewVersion = false

{% if letsencrypt_enabled|bool %} 
defaultEntryPoints = ["https","http"] 
{% else %}
defaultEntryPoints = ["http"] 
{% endif %}

insecureSkipVerify = true

[accessLog]

[entryPoints] 
  [entryPoints.http] 
  address = ":80"
  compress = true
{% if letsencrypt_enabled|bool %} 
    [entryPoints.http.redirect]
    entryPoint = "https" 
  [entryPoints.https] 
    address = ":443"
    compress = true
      [entryPoints.https.tls]
      minVersion = "VersionTLS12" 
      cipherSuites = [
        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
      ]
{% endif %}

################################################################
# File configuration backend
################################################################
# Enable file configuration backend Optional
[file]
[backends]
	[backends.grafana]
		[backends.grafana.servers.grafana]
			url = "http://{{ hostvars[groups['manager'][0]]['cluster_ip'] }}:3000"

	[backends.loki]
		[backends.loki.servers.loki]
			url = "http://{{ hostvars[groups['manager'][0]]['cluster_ip'] }}:3100"

[frontends]
	[frontends.grafana]
		entrypoints=["http", "https"]
		backend = "grafana"
    [frontends.grafana.auth]
      headerField = "X-WebAuth-User"
      [frontends.grafana.auth.basic]
        removeHeader = true
        users = [
          "{{ admin_user }}:{{ admin_password_hash |Â replace('$$','$') }}"
        ]
    [frontends.grafana.routes]
      [frontends.grafana.routes.grafana]
        rule = "Host:grafana.{{ space_domain }}"
    [frontends.grafana.headers]
      customFrameOptionsValue = "allow-from https://dashboard.{{ space_domain }}"
      SSLRedirect = true

[api]
entrypoint="traefik"
dashboard = true  


[retry] 

[docker] 
endpoint = "unix:///var/run/docker.sock" 
domain = "{{ space_domain }}" 
watch = true 
exposedByDefault = false 

[acme] 
email = "{{ letsencrypt_mail }}" 
storage = "/etc/traefik/acme.json" 
entryPoint = "https" 
onHostRule = true
  [acme.httpChallenge]
    entryPoint = "http"
{% if apollo_dns_enabled|bool %}
  [acme.dnsChallenge]
    provider = "{{ apollo_dns_challenge_provider }}"
    deleayBeforeCheck = 0
    resolvers = ["1.1.1.1:53", "8.8.8.8:53"]
[[acme.domains]]
  main = "*.{{ space_domain }}"
  sans = "{{ space_domain }}"
{% endif %}


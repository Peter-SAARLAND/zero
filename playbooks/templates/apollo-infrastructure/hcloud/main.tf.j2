provider "hcloud" {
  token = "{{ arc['infrastructure']['auth']['token'] }}"
}

# Shared tags
locals {
  # Common tags to be assigned to all resources
  common_tags = {
    "space" = "{{ arc['space']['name'] }}",
    "provider" = "apollo"
  }

  all_tags = merge(local.common_tags)
}

resource "hcloud_ssh_key" "ssh_key" {
  name       = "{{ arc['space']['name'] }}-ssh"
  public_key = file(".ssh/id_rsa.pub")
}

# Create a manager server
resource "hcloud_server" "manager" {
  count = {{ arc['infrastructure']['manager']['count'] | default(1, 0) }}
  name = join("-",["manager",count.index])
  image = "{{ arc['infrastructure']['manager']['os_family'] | default('ubuntu-18.04', true) }}"
  server_type = "{{ arc['infrastructure']['manager']['size'] | default('cx31', true) }}"
  ssh_keys  = [hcloud_ssh_key.ssh_key.id]
  labels = local.all_tags
  location = "fsn1"
}

# Create a worker server
resource "hcloud_server" "worker" {
  count = {{ arc['infrastructure']['worker']['count'] | default(0,true) }}
  name = join("-",["worker",count.index])
  image = "{{ arc['infrastructure']['worker']['os_family'] | default('ubuntu-18.04', true) }}"
  server_type = "{{ arc['infrastructure']['worker']['size'] | default('cx21', true) }}"
  ssh_keys  = [hcloud_ssh_key.ssh_key.id]
  labels = local.all_tags
  location = "fsn1"
}

{% if arc['data']['provider'] in ['cio', 'storidge'] %}
#  create volume manager
resource "hcloud_volume" "manager" {
  count = {{ arc['infrastructure']['manager']['volume_count'] | default(0, true) }} * {{ arc['infrastructure']['manager']['count'] | default(0, true) }}
  name = "{{ arc['space']['name'] }}-manager-vol-${count.index}"
  size     = "{{ arc['infrastructure']['manager']['volume_size'] | default(0, true) }}"
  location= "fsn1"
}

#  create volume worker
resource "hcloud_volume" "worker" {
  count = {{ arc['infrastructure']['worker']['volume_count'] | default(0, true) }} * {{ arc['infrastructure']['worker']['count'] | default(0, true) }}
  name = "{{ arc['space']['name'] }}-worker-vol-${count.index}"
  size     = "{{ arc['infrastructure']['worker']['volume_size'] | default(0, true) }}"
  location= "fsn1"
}

#  attach volume manager
resource "hcloud_volume_attachment" "manager" {
  count = {{ arc['infrastructure']['manager']['volume_count'] | default(0, true) }} * {{ arc['infrastructure']['manager']['count'] | default(0, true) }}
  volume_id = hcloud_volume.manager[count.index].id
  server_id = element(hcloud_server.manager.*.id, floor(count.index / {{ arc['infrastructure']['manager']['volume_count'] | default(0, true) }}))
  automount = true
}

#  attach volume worker
resource "hcloud_volume_attachment" "worker" {
  count = {{ arc['infrastructure']['worker']['volume_count'] | default(0, true) }} * {{ arc['infrastructure']['worker']['count'] | default(0, true) }}
  volume_id = hcloud_volume.worker[count.index].id
  server_id = element(hcloud_server.worker.*.id, floor(count.index / {{ arc['infrastructure']['worker']['volume_count'] | default(0, true) }}))
  automount = true
}

{% endif %}

#create network in hcloud
resource "hcloud_network" "cluster_network" {
  name = "{{ arc['space']['name'] }}-net"
  ip_range = "10.16.0.0/16"
}

#config location/type and ip range to network
resource "hcloud_network_subnet" "apollo" {
  network_id = hcloud_network.cluster_network.id
  type = "server"
  network_zone = "eu-central"
  ip_range   = "10.16.0.0/16"
}

#attach the network to manager instance
resource "hcloud_server_network" "managers" {
  count = {{ arc['infrastructure']['manager']['count'] }}
  server_id = hcloud_server.manager[count.index].id
  network_id = hcloud_network.cluster_network.id
}

#attach the network to worker instance
resource "hcloud_server_network" "workers" {
  count = {{ arc['infrastructure']['worker']['count'] }}
  server_id = hcloud_server.worker[count.index].id
  network_id = hcloud_network.cluster_network.id
}
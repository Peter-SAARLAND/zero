# @zero-core
force_reboot: 0
zero_id: "{{ lookup('env','ZERO_ID') | default('zero', true) }}"
check_git: "{{ lookup('env','CHECK_GIT') | default(0, true) }}"
ansible_ssh_private_key_file: "{{ lookup('env','SSH_PRIVATE_KEY_FILE') | default('~/.ssh/id_rsa', true) }}"
ansible_python_interpreter: "{{ lookup('env','PYTHON_INTERPRETER') | default('/usr/bin/python3', true) }}"
ntp_timezone: "{{ lookup('env','NTP_TIMEZONE') | default('Etc/UTC', true) }}"
locale_lang: "{{ lookup('env','LOCALE_LANG') | default('de_DE.UTF-8', true) }}"
pip_package: "{{ lookup('env','PIP_PACKAGE') | default('python3-pip', true) }}"
private_iface: "{{ lookup('env','PRIVATE_INTERFACE') | default('eth0', true) }}"
public_iface: "{{ lookup('env','PUBLIC_INTERFACE') | default('eth1', true) }}"
remote_user: "{{ lookup('env','REMOTE_USER') | default('root', true) }}"

become: "{{ False if ansible_facts['os_family'] == 'Windows' else True }}"
become_method: "{{ 'runas' if ansible_facts['os_family'] == 'Windows' else 'sudo' }}"

# @zero-infrastructure
infrastructure_provider: "{{ lookup('env','INFRASTRUCTURE_PROVIDER') | default('vagrant', true) }}"

# Lets Encrypt
letsencrypt_enabled: "{{ lookup('env','LETSENCRYPT_ENABLED') | default(0, true) }}"
letsencrypt_mail: "{{ lookup('env','LETSENCRYPT_MAIL') }}"


# Kernel
# # https://github.com/locationlabs/ansible-role_kernel-update/blob/master/tasks/set-grub-default_14_04.yml
kernel_update_grub_requested_kernel_version: 4.15.0-91-generic
kernel_update_config_prefix_grub_default: 99
kernel_update_kernel_version_file: /var/lib/misc/ansible_kernel-update_old-kernel-version.txt

# Docker Swarm
swarm_enabled: "{{ lookup('env','SWARM_ENABLED') | default(1, true) }}"
swarm_networks:
    - proxy
    - portainer
    - consul
    - monitoring
    - s3

# Kubernetes
kubernetes_enabled: "{{ lookup('env','KUBERNETES_ENABLED') | default(0, true) }}"
kubernetes_pod_cidr: "{{ lookup('env','KUBERNETES_POD_CIDR') | default('172.16.11.0/16', true) }}"
kubernetes_pod_cni: 'flannel'
kubernetes_version: '1.17'
kubernetes_version_kubeadm: 'stable-{{ kubernetes_version }}'
kubernetes_ignore_preflight_errors: 'all'
kubernetes_enable_web_ui: True
kubernetes_kubelet_extra_args: "--cgroup-driver=systemd"
kubernetes_kubeadm_init_extra_opts: ""
kubernetes_join_command_extra_opts: ""
kubernetes_web_ui_manifest_file: https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
kubernetes_flannel_manifest_file_rbac: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
kubernetes_flannel_manifest_file: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubernetes_calico_manifest_file: https://docs.projectcalico.org/v3.10/manifests/calico.yaml
kubelet_environment_file_path: /etc/default/kubelet
kubernetes_allow_pods_on_master: True


# Backplane
backplane_enabled: "{{ lookup('env','BACKPLANE_ENABLED') | default(1, true) }}"
backplane_services:
    - zero-app-traefik
    - zero-app-portainer
    - zero-app-prometheus
    - zero-app-loki
    - zero-app-grafana

# Custom
ingress_ip: "{{ lookup('env','INGRESS_IP') | default('127.0.0.1', true) }}"
base_domain: "{{ lookup('env','BASE_DOMAIN') | default(ingress_ip + '.xip.io', true) }}"
admin_user: "{{ lookup('env','ADMIN_USER') | default('admin', true) }}"
admin_password: "{{ lookup('env','ADMIN_PASSWORD') | default('admin', true) }}"

# Cloudflare
cloudflare_enabled: "{{ lookup('env','CLOUDFLARE_ENABLED') | default(0, true) }}"
cloudflare_api_email: "{{ lookup('env','CLOUDFLARE_API_EMAIL') }}"
cloudflare_api_key: "{{ lookup('env','CLOUDFLARE_API_KEY') }}"

# GitLab
# GitLab Personal Access token: https://gitlab.com/profile/personal_access_tokens
runner_enabled: "{{ lookup('env','RUNNER_ENABLED') | default(0, true) }}"
gl_token: "{{ lookup('env','GITLAB_GL_TOKEN') }}"
registry_url: "{{ lookup('env','GITLAB_REGISTRY_URL') | default('registry.gitlab.com', true) }}"
registry_user: "{{ lookup('env','GITLAB_REGISTRY_USER') }}"
registry_password: "{{ lookup('env','GITLAB_REGISTRY_PASSWORD') | default(gl_token, true) }}"
runner_token: "{{ lookup('env','GITLAB_RUNNER_TOKEN') | default('SUCHSECRETMUCHWOW', true) }}"
ci_docker_image: "docker:19.03.5"
ci_dind_image: "docker:19.03.5-dind"
runner_env: 
    - "GL_TOKEN={{ gl_token }}"
    - "DOCKER_DRIVER=overlay2"
    - "DOCKER_BUILDKIT=1"

# Slack
slack_webhook: "{{ lookup('env','SLACK_WEBHOOK') }}"
slack_channel: "{{ lookup('env','SLACK_CHANNEL') }}"
slack_user: "{{ lookup('env','SLACK_USER') | default('zero', true) }}"


# Storidge
storidge_min_nodes: 4
storidge_enabled: "{{ lookup('env','STORIDGE_ENABLED') | default(0, true) }}"
storidge_install_version: "{{ lookup('env','STORIDGE_INSTALL_VERSION') | default('3186', true) }}" #3138
storidge_fix_iscsi: "{{ lookup('env','STORIDGE_FIX_ISCSI') | default(0, true) }}"

# Cloud Integrations
## IBM
ibm_enabled: "{{ lookup('env','IBM_ENABLED') | default(0, true) }}"
ibm_access_key: "{{ lookup('env','IBM_ACCESS_KEY') | default(0, true) }}"
ibm_resource_group_id: "{{ lookup('env','IBM_RESOURCE_GROUP_ID') | default(0, true) }}"

## Digital Ocean
digitalocean_enabled: "{{ lookup('env','DIGITALOCEAN_ENABLED') | default(0, true) }}"
digitalocean_auth_token: "{{ lookup('env','DIGITALOCEAN_AUTH_TOKEN') | default('', true) }}"
digitalocean_ssh_key_id: "{{ lookup('env','DIGITALOCEAN_SSH_KEY_ID') | default('', true) }}"

## AWS
aws_enabled: "{{ lookup('env','AWS_ENABLED') | default(0, true) }}"

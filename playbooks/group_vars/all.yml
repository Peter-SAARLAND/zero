# @zero-core
force_reboot: 0
if0_environment: "{{ lookup('env','IF0_ENVIRONMENT') | default('zero', true) }}"
environment_dir: "{{ lookup('env','ENVIRONMENT_DIR') | default('~/.if0/.environments/zero', true) }}"
zero_apps: "{{ lookup('env','ZERO_APPS').split(',') | default([''], true) }}"

zero_smtp_server: "{{ lookup('env','ZERO_SMTP_SERVER') | default('', true) }}"
zero_smtp_username: "{{ lookup('env','ZERO_SMTP_USERNAME') | default('', true) }}"
zero_smtp_password: "{{ lookup('env','ZERO_SMTP_PASSWORD') | default('', true) }}"
zero_smtp_port: "{{ lookup('env','ZERO_SMTP_PORT') | default('587', true) }}"

# OS detection helper
worker_os_family: "{{ lookup('env', 'TF_VAR_worker_os_family') | default('ubuntu', true) }}"

ansible_ssh_private_key_file: "{{ lookup('env','SSH_PRIVATE_KEY_FILE') | default('~/.if0/.environments/zero/.ssh/id_rsa', true) }}"
ansible_ssh_public_key_file: "{{ lookup('env','SSH_PUBLIC_KEY_FILE') | default('~/.if0/.environments/zero/.ssh/id_rsa.pub', true) }}"

ansible_python_interpreter: '/usr/bin/python3'
ntp_timezone: "{{ lookup('env','NTP_TIMEZONE') | default('Etc/UTC', true) }}"
locale_lang: "{{ lookup('env','LOCALE_LANG') | default('de_DE.UTF-8', true) }}"
pip_package: "{{ lookup('env','PIP_PACKAGE') | default('python3-pip', true) }}"
app_healthcheck_retries: "{{ lookup('env','ZERO_APP_HEALTHCHECK_RETRIES') | default(30, true) }}"
app_healthcheck_delay: "{{ lookup('env','ZERO_APP_HEALTHCHECK_DELAY') | default(30, true) }}"
#remote_user: "{{ lookup('env','REMOTE_USER') | default('root', true) }}"

become: "{{ False if ansible_facts['os_family'] == 'Windows' else True }}"
become_method: "{{ 'runas' if ansible_facts['os_family'] == 'Windows' else 'sudo' }}"

private_iface: "{{ lookup('env','ZERO_PRIVATE_INTERFACE') | default('eth0', true) }}"
public_iface: "{{ lookup('env','ZERO_PUBLIC_INTERFACE') | default('eth1', true) }}"
zero_provider: "{{ lookup('env','ZERO_PROVIDER') | default('vagrant', true) }}"
zero_engine: "{{ lookup('env','ZERO_ENGINE') | default('docker', true) }}"
zero_orchestrator: "{{ lookup('env','ZERO_ORCHESTRATOR') | default('swarm', true) }}"
zero_data: "{{ lookup('env','ZERO_DATA') | default('generic', true) }}"

# Lets Encrypt
letsencrypt_enabled: "{{ lookup('env','LETSENCRYPT_ENABLED') | default(0, true) }}"
letsencrypt_mail: "{{ lookup('env','LETSENCRYPT_MAIL') }}"

# Kernel
# # https://github.com/locationlabs/ansible-role_kernel-update/blob/master/tasks/set-grub-default_14_04.yml
kernel_version: 0
kernel_update_grub_requested_kernel_version: 4.15.0-91-generic
kernel_update_config_prefix_grub_default: 99
kernel_update_kernel_version_file: /var/lib/misc/ansible_kernel-update_old-kernel-version.txt

# Docker Swarm
swarm_enabled: "{{ lookup('env','SWARM_ENABLED') | default(1, true) }}"
swarm_networks:
    - proxy
    - portainer
    - consul
    - monitoring
    - s3

# Kubernetes
kubernetes_enabled: "{{ lookup('env','KUBERNETES_ENABLED') | default(0, true) }}"

# Backplane
backplane_enabled: "{{ lookup('env','BACKPLANE_ENABLED') | default(1, true) }}"
backplane_apps:
    - zero-app-traefik
    - zero-app-loki
    - zero-app-portainer
    - zero-app-prometheus
    - zero-app-alertmanager
    - zero-app-grafana
    - zero-app-cadvisor
    - zero-app-node-exporter
    - zero-app-dockerd-exporter
    - zero-app-minio
    - zero-app-gc
    - zero-app-alertmanager
    - zero-app-smtp

# Custom
ingress_ip: "{{ lookup('env','ZERO_INGRESS_IP') | default('127.0.0.1', true) }}"
base_domain: "{{ lookup('env','ZERO_BASE_DOMAIN') | default(ingress_ip + '.xip.io', true) }}"
platform_domain: "{{ lookup('env','ZERO_PLATFORM_DOMAIN') | default(if0_environment + '.' + base_domain, true) }}"
admin_user: "{{ lookup('env','ZERO_ADMIN_USER') | default('admin', true) }}"
admin_password: "{{ lookup('env','ZERO_ADMIN_PASSWORD') | default('insecure!', true) }}"
#admin_password_hash_escaped: "{{ admin_password_hash |Â replace('$','$$') }}"
admin_password_hash: "{{ lookup('env','ZERO_ADMIN_PASSWORD_HASH') | default('$$2y$$05$$KjJMrwd7ZQbn/6p0uQvXYusZoR6uGNgEgvPfAzhmJ12T4bPFal/se', true) }}"

# lazydocker
lazydocker_url: "https://github.com/jesseduffield/lazydocker/releases/download/v0.8/lazydocker_0.8_{{ ansible_system }}_{{ ansible_architecture }}.tar.gz"

# Cloudflare
cloudflare_enabled: "{{ lookup('env','CLOUDFLARE_ENABLED') | default(0, true) }}"
cloudflare_api_email: "{{ lookup('env','CLOUDFLARE_API_EMAIL') }}"
cloudflare_api_key: "{{ lookup('env','CLOUDFLARE_API_KEY') }}"

# GitLab
# GitLab Personal Access token: https://gitlab.com/profile/personal_access_tokens
runner_enabled: "{{ lookup('env','RUNNER_ENABLED') | default(0, true) }}"
runner_deploy_enabled: "{{ lookup('env','RUNNER_DEPLOY_ENABLED') | default(1, true) }}"
runner_build_enabled: "{{ lookup('env','RUNNER_BUILD_ENABLED') | default(1, true) }}"
gl_token: "{{ lookup('env','GL_TOKEN') }}"
registry_url: "{{ lookup('env','GITLAB_REGISTRY_URL') | default('registry.gitlab.com', true) }}"
registry_user: "{{ lookup('env','GITLAB_REGISTRY_USER') }}"
registry_password: "{{ lookup('env','GITLAB_REGISTRY_PASSWORD') | default(gl_token, true) }}"
gitlab_shared_runners_token: "{{ lookup('env','GITLAB_SHARED_RUNNERS_TOKEN') | default('z7e3r2o0', true) }}"
runner_token: "{{ lookup('env','GITLAB_RUNNER_TOKEN') | default(gitlab_shared_runners_token, true) }}"
ci_docker_image: "docker:19.03.6"
ci_dind_image: "docker:19.03.6-dind"
runner_env: 
    - "DOCKER_DRIVER=overlay2"
    - "DOCKER_BUILDKIT=1"
gitlab_runner_package_version: 13.0.0
gitlab_runner_listen_address: ":9252"
gitlab_runner_registration_token: "{{ runner_token }}"
gitlab_runner_package_name: 'gitlab-runner'
gitlab_runner_coordinator_url: "{{ lookup('env','GITLAB_RUNNER_COORDINATOR_URL') | default('https://gitlab.com', true) }}"

# Cloud Integrations
## IBM
ibm_enabled: "{{ lookup('env','IBM_ENABLED') | default(0, true) }}"
ibm_access_key: "{{ lookup('env','IBM_ACCESS_KEY') | default(0, true) }}"
ibm_resource_group_id: "{{ lookup('env','IBM_RESOURCE_GROUP_ID') | default(0, true) }}"

## Digital Ocean
digitalocean_enabled: "{{ lookup('env','DIGITALOCEAN_ENABLED') | default(0, true) }}"
digitalocean_auth_token: "{{ lookup('env','DIGITALOCEAN_AUTH_TOKEN') | default('', true) }}"
digitalocean_ssh_key_id: "{{ lookup('env','DIGITALOCEAN_SSH_KEY_ID') | default('', true) }}"

## AWS
aws_enabled: "{{ lookup('env','AWS_ENABLED') | default(0, true) }}"
aws_access_key_id: "{{ lookup('env','AWS_ACCESS_KEY_ID') | default(admin_user, true) }}"
aws_secret_access_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') | default(admin_password, true) }}"

hcloud_token: "{{ lookup('env','HCLOUD_TOKEN') }}"

# Rexray S3FS
s3fs_accesskey: "{{ lookup('env','S3FS_ACCESSKEY') }}"
s3fs_secretkey: "{{ lookup('env','S3FS_SECRETKEY') }}"
s3fs_endpoint: "{{ lookup('env','S3FS_ENDPOINT') }}"
s3fs_options: "{{ lookup('env','S3FS_OPTIONS') | default('allow_other,use_path_request_style,nonempty,url=http://minio.'+platform_domain, true) }}"
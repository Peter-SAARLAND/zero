# include:
#   - remote: 'https://gitlab.com/peter.saarland/scratch/-/raw/master/ci/templates/default.gitlab-ci.yml'

include:
  - remote: "https://gitlab.com/peter.saarland/shipmate/-/raw/master/shipmate.gitlab-ci.yml"

Build node-exporter:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/node-exporter:latest || true
    - cd roles/zero-app-node-exporter/files/docker
    - docker build --cache-from $CI_REGISTRY_IMAGE/node-exporter:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/node-exporter:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/node-exporter:$CI_COMMIT_SHORT_SHA
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/node-exporter/**
  #     when: manual
  only:
    - master

Build prometheus:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/prometheus:latest || true
    - cd docker/prometheus
    - docker build --cache-from $CI_REGISTRY_IMAGE/prometheus:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/prometheus:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/prometheus:$CI_COMMIT_SHORT_SHA
  #rules:
  #  - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #    - docker/prometheus/**
  #    when: manual
  only:
    - master

Build alertmanager:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/alertmanager:latest || true
    - cd docker/alertmanager
    - docker build --cache-from $CI_REGISTRY_IMAGE/alertmanager:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/alertmanager:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/alertmanager:$CI_COMMIT_SHORT_SHA
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/alertmanager/**
  #     when: manual
  only:
    - master

Build grafana:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/grafana:latest || true
    - cd docker/grafana
    - docker build --cache-from $CI_REGISTRY_IMAGE/grafana:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/grafana:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/grafana:$CI_COMMIT_SHORT_SHA
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/grafana/**
  #     when: manual
  only:
    - master
    
# # Lint Ansible files
# test:ansible:
#   stage: test
#   image: $CONTAINER_TEST_IMAGE
#   script:
#     - ansible-lint --version
#     - cd ansible
#     - echo 'Ansible refuses to read from a world-writeable folder, hence' && chmod -v 700 $(pwd)
#     - ansible-lint *.yml
#   allow_failure: true
#   tags: 
#     

Release prometheus:
  stage: ship
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/prometheus:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/prometheus:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/prometheus:latest
    - docker push $CI_REGISTRY_IMAGE/prometheus:latest
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/prometheus:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/prometheus:v$(cat VERSION.txt)
    - docker push $CI_REGISTRY_IMAGE/prometheus:v$(cat VERSION.txt)
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/prometheus/**
  #     when: manual
  only:
    - master
    
Release alertmanager:
  stage: ship
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/alertmanager:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/alertmanager:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/alertmanager:latest
    - docker push $CI_REGISTRY_IMAGE/alertmanager:latest
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/alertmanager:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/alertmanager:v$(cat VERSION.txt)
    - docker push $CI_REGISTRY_IMAGE/alertmanager:v$(cat VERSION.txt)
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/alertmanager/**
  #     when: manual   
  only:
    - master

Release grafana:
  stage: ship
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/grafana:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/grafana:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/grafana:latest
    - docker push $CI_REGISTRY_IMAGE/grafana:latest
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/grafana:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/grafana:v$(cat VERSION.txt)
    - docker push $CI_REGISTRY_IMAGE/grafana:v$(cat VERSION.txt)
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/grafana/**
  #     when: manual
  only:
    - master

Release node-exporter:
  stage: ship
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/node-exporter:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/node-exporter:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/node-exporter:latest
    - docker push $CI_REGISTRY_IMAGE/node-exporter:latest
    - docker tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/node-exporter:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/node-exporter:v$(cat VERSION.txt)
    - docker push $CI_REGISTRY_IMAGE/node-exporter:v$(cat VERSION.txt)
  # rules:
  #   - changes: # Will include the job and set to when:manual if any of the follow paths match a modified file.
  #     - docker/node-exporter/**
  #     when: manual
  only:
    - master
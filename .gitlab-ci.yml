stages:
  - version
  - build
  - test
  - release
  - deploy

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  # Source Environment Variables from .env
  # TODO: Remove the need for .env globally
  - export $(grep -v '^#' .env | xargs)

version:
  stage: version
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  script:
    - printenv
    - release test-git || true
    - release test-api
    - release next-version --allow-current
    - release next-version --allow-current > .next-version
    - echo "RELEASE_URL=$CI_PROJECT_URL/-/tags/v$(<.next-version)" > build_info
    - echo "RELEASE_DESC=\"$(uname -mo) binary\"" >> build_info
    - echo "RELEASE_SHA=$CI_COMMIT_SHORT_SHA" >> build_info
    - echo "RELEASE_VERSION=$(<.next-version)" >> build_info
  artifacts:
    paths:
    - .next-version
    - build_info
  except:
    - tags
  tags: 
    - build

Build node-exporter:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/node-exporter:latest || true
    - cd docker/node-exporter
    - docker build --cache-from $CI_REGISTRY_IMAGE/node-exporter:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/node-exporter:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/node-exporter:$CI_COMMIT_SHORT_SHA
  tags: 
    - build

Build prometheus:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/prometheus:latest || true
    - cd docker/prometheus
    - docker build --cache-from $CI_REGISTRY_IMAGE/prometheus:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/prometheus:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/prometheus:$CI_COMMIT_SHORT_SHA
  tags: 
    - build

Build alertmanager:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/alertmanager:latest || true
    - cd docker/alertmanager
    - docker build --cache-from $CI_REGISTRY_IMAGE/alertmanager:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/alertmanager:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/alertmanager:$CI_COMMIT_SHORT_SHA
  tags: 
    - build

Build grafana:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/grafana:latest || true
    - cd docker/grafana
    - docker build --cache-from $CI_REGISTRY_IMAGE/grafana:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/grafana:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/grafana:$CI_COMMIT_SHORT_SHA
  tags: 
    - build
    - infrastructure

Build traefik:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/traefik:latest || true
    - cd docker/grafana
    - docker build --cache-from $CI_REGISTRY_IMAGE/traefik:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE/traefik:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/traefik:$CI_COMMIT_SHORT_SHA
  tags: 
    - build

Build infrastructure:
  stage: build
  image: docker:19.03.5
  variables:
    DOCKER_BUILDKIT: 1 
  services:
    - docker:19.03.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -f docker/infrastructure/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  tags: 
    - build

# # Lint Ansible files
# test:ansible:
#   stage: test
#   image: $CONTAINER_TEST_IMAGE
#   script:
#     - ansible-lint --version
#     - cd ansible
#     - echo 'Ansible refuses to read from a world-writeable folder, hence' && chmod -v 700 $(pwd)
#     - ansible-lint *.yml
#   allow_failure: true
#   tags: 
#     - infrastructure

Release prometheus:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/prometheus:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/prometheus:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/prometheus:latest
    - docker push $CI_REGISTRY_IMAGE/prometheus:latest
    - docker tag $CI_REGISTRY_IMAGE/prometheus:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/prometheus:v$RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE/prometheus:v$RELEASE_VERSION
  only:
    - master
  tags: 
    - build
    - infrastructure

Release alertmanager:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/alertmanager:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/alertmanager:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/alertmanager:latest
    - docker push $CI_REGISTRY_IMAGE/alertmanager:latest
    - docker tag $CI_REGISTRY_IMAGE/alertmanager:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/alertmanager:v$RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE/alertmanager:v$RELEASE_VERSION
  only:
    - master
  tags: 
    - build
    - infrastructure

Release grafana:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/grafana:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/grafana:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/grafana:latest
    - docker push $CI_REGISTRY_IMAGE/grafana:latest
    - docker tag $CI_REGISTRY_IMAGE/grafana:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/grafana:v$RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE/grafana:v$RELEASE_VERSION
  only:
    - master
  tags: 
    - build
    - infrastructure

Release node-exporter:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/node-exporter:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/node-exporter:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/node-exporter:latest
    - docker push $CI_REGISTRY_IMAGE/node-exporter:latest
    - docker tag $CI_REGISTRY_IMAGE/node-exporter:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/node-exporter:v$RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE/node-exporter:v$RELEASE_VERSION
  only:
    - master
  tags: 
    - build
    - infrastructure

Release traefik:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/traefik:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE/traefik:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/traefik:latest
    - docker push $CI_REGISTRY_IMAGE/traefik:latest
    - docker tag $CI_REGISTRY_IMAGE/traefik:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE/traefik:v$RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE/traefik:v$RELEASE_VERSION
  only:
    - master
  tags: 
    - build

Release infrastructure:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - . build_info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA || true
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:v$RELEASE_VERSION
    - docker push $CI_REGISTRY_IMAGE:v$RELEASE_VERSION
  only:
    - master
  tags: 
    - build
    - infrastructure

release version:
  stage: release
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  script:
    - rm -f release_info
    - mv build_info release_info
    - . release_info
    - release changelog 
    - release commit-and-tag CHANGELOG.md release_info
  only:
    - master
  tags: 
    - build

# deploy:
#   stage: deploy
#   script:
#     - docker info
#   tags:
#     - deploy